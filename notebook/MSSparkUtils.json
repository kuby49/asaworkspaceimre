{
	"name": "MSSparkUtils",
	"properties": {
		"folder": {
			"name": "Lab01_Synapse_Spark"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"from notebookutils import mssparkutils\r\n",
					"\r\n",
					"#\r\n",
					"# Microsoft Spark Utilities\r\n",
					"#\r\n",
					"# https://docs.microsoft.com/en-us/azure/synapse-analytics/spark/microsoft-spark-utilities?pivots=programming-language-python\r\n",
					"#\r\n",
					"\r\n",
					"# Azure storage access info\r\n",
					"blob_account_name = datalake\r\n",
					"blob_container_name = 'wwi-02'\r\n",
					"blob_relative_path = '/'\r\n",
					"linkedServiceName = datalake\r\n",
					"blob_sas_token = mssparkutils.credentials.getConnectionStringOrCreds(linkedServiceName)\r\n",
					"\r\n",
					"# Allow SPARK to access from Blob remotely\r\n",
					"spark.conf.set('fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name), blob_sas_token)\r\n",
					"\r\n",
					"files = mssparkutils.fs.ls('/')\r\n",
					"for file in files:\r\n",
					"    print(file.name, file.isDir, file.isFile, file.path, file.size)\r\n",
					"\r\n",
					"mssparkutils.fs.mkdirs('/SomeNewFolder')\r\n",
					"\r\n",
					"files = mssparkutils.fs.ls('/')\r\n",
					"for file in files:\r\n",
					"    print(file.name, file.isDir, file.isFile, file.path, file.size)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					""
				]
			}
		]
	}
}