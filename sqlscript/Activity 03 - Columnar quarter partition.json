{
	"name": "Activity 03 - Columnar quarter partition",
	"properties": {
		"content": {
			"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [wwi_perf].[Sale_Partition02]\n( \n\t[TransactionId] [uniqueidentifier]  NOT NULL,\n\t[CustomerId] [int]  NOT NULL,\n\t[ProductId] [smallint]  NOT NULL,\n\t[Quantity] [tinyint]  NOT NULL,\n\t[Price] [decimal](9,2)  NOT NULL,\n\t[TotalAmount] [decimal](9,2)  NOT NULL,\n\t[TransactionDateId] [int]  NOT NULL,\n\t[ProfitAmount] [decimal](9,2)  NOT NULL,\n\t[Hour] [tinyint]  NOT NULL,\n\t[Minute] [tinyint]  NOT NULL,\n\t[StoreId] [smallint]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [CustomerId] ),\n\tCLUSTERED COLUMNSTORE INDEX,\n\tPARTITION\n\t(\n\t\t[TransactionDateId] RANGE RIGHT FOR VALUES (20190101, 20190401, 20190701, 20191001)\n\t)\n)\nGO\n\n-- columnstore table\n-- Distributed on customer ID, => all same customer IDs on same distribution \n-- Columnstore will take advantage of columnar compression, MIN / MAX values per ROW GROUP for quantity, count Distinct values\n-- Columstore will also allow to retrieve only columns impacted.\n-- Partitioned. Partition size is optimal, because we have 80 million rows per partition \n\n\nEXECUTE AS USER = 'asa.sql.highperf'\nGO\nSELECT CURRENT_USER;  \nGO  \n\nEXEC sp_addrolemember 'staticrc80', 'asa.sql.highperf'\nGO\n\nDROP Table [wwi_perf].[Sale_Result]\nGO\n\nCREATE TABLE [wwi_perf].[Sale_Result]\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n)\nAS\nSELECT \n    FS.CustomerID\n    ,MIN(FS.Quantity) as MinQuantity\n    ,MAX(FS.Quantity) as MaxQuantity\n    ,AVG(FS.Price) as AvgPrice\n    ,AVG(FS.TotalAmount) as AvgTotalAmount\n    ,AVG(FS.ProfitAmount) as AvgProfitAmount\n    ,COUNT(DISTINCT FS.StoreId) as DistinctStores\nFROM\n    wwi_perf.Sale_Partition02 FS\nGROUP BY\n    FS.CustomerId\nGO \n\n-- only one request step, no DMS, no shuffling\n-- DWU 2000 1st runtime 5 s, 2nd runtime 2 secs\n-- SWU 2000 1st runtime 7 s, 2nd runtime 4s\n\nEXEC sp_droprolemember 'staticrc80', 'asa.sql.highperf'\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"name": "SQLPool01",
				"type": "SqlPool"
			}
		},
		"type": "SqlQuery"
	}
}