{
	"name": "Lab 1  - Loading step",
	"properties": {
		"content": {
			"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [wwi_staging].[Sale_Heap]\n( \n\t[TransactionId] [uniqueidentifier]  NOT NULL,\n\t[CustomerId] [int]  NOT NULL,\n\t[ProductId] [smallint]  NOT NULL,\n\t[Quantity] [tinyint]  NOT NULL,\n\t[Price] [decimal](9,2)  NOT NULL,\n\t[TotalAmount] [decimal](9,2)  NOT NULL,\n\t[TransactionDateId] [int]  NOT NULL,\n\t[ProfitAmount] [decimal](9,2)  NOT NULL,\n\t[Hour] [tinyint]  NOT NULL,\n\t[Minute] [tinyint]  NOT NULL,\n\t[StoreId] [smallint]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n)\nGO\n\nCREATE TABLE [wwi_staging].[Sale]\n(\n    [TransactionId] [uniqueidentifier]  NOT NULL,\n    [CustomerId] [int]  NOT NULL,\n    [ProductId] [smallint]  NOT NULL,\n    [Quantity] [smallint]  NOT NULL,\n    [Price] [decimal](9,2)  NOT NULL,\n    [TotalAmount] [decimal](9,2)  NOT NULL,\n    [TransactionDate] [int]  NOT NULL,\n    [ProfitAmount] [decimal](9,2)  NOT NULL,\n    [Hour] [tinyint]  NOT NULL,\n    [Minute] [tinyint]  NOT NULL,\n    [StoreId] [smallint]  NOT NULL\n)\nWITH\n(\n    DISTRIBUTION = HASH ( [CustomerId] ),\n    CLUSTERED COLUMNSTORE INDEX,\n    PARTITION\n    (\n        [TransactionDaten    )\n)\n\n\n---- POLY BASE LOAD\n--------------------\n-- prerequsite for polybase Data source\nCREATE EXTERNAL DATA SOURCE ABSSimre\nWITH\n( TYPE = HADOOP,\n    LOCATION = 'abfss://wwi-02@asadatalakeimre.dfs.core.windows.net'\n);\n\n-- prerequisite for polybase - file format \nCREATE EXTERNAL FILE FORMAT [ParquetFormatImre]\nWITH (\n    FORMAT_TYPE = PARQUET,\n    DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'\n)\nGO\n\n-- create a new schema for external tables\nCREATE SCHEMA [wwi_external];\nGO\n\n-- needs following \n-- location \n-- previously defined datasource\n-- previsouly defined file format\nCREATE EXTERNAL TABLE [wwi_external].Sales\n    (\n        [TransactionId] [nvarchar](36)  NOT NULL,\n        [CustomerId] [int]  NOT NULL,\n        [ProductId] [smallint]  NOT NULL,\n        [Quantity] [smallint]  NOT NULL,\n        [Price] [decimal](9,2)  NOT NULL,\n        [TotalAmount] [decimal](9,2)  NOT NULL,\n        [TransactionDate] [int]  NOT NULL,\n        [ProfitAmount] [decimal](9,2)  NOT NULL,\n        [Hour] [tinyint]  NOT NULL,\n        [Minute] [tinyint]  NOT NULL,\n        [StoreId] [smallint]  NOT NULL\n    )\nWITH\n    (\n        LOCATION = '/sale-small/Year=2019',  \n        DATA_SOURCE = ABSSImre,\n        FILE_FORMAT = [ParquetFormatImre]  \n    )  \nGO\n\n-- insert the external table just created \nINSERT INTO [wwi_staging].[Sale_Heap]\nSELECT *\nFROM [wwi_external].[Sales]\n\nSELECT COUNT(1) FROM wwi_staging.Sale_Heap(nolock)\n\n\n-- Trying cooy operation \n-- truncating table\nTRUNCATE TABLE wwi_staging.Sale_Heap;\nGO\n\n-- Replace <PrimaryStorage> with the workspace default storage account name.\nCOPY INTO wwi_staging.Sale_Heap\nFROM 'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-small/Year=2019'\nWITH (\n    FILE_TYPE = 'PARQUET',\n    COMPRESSION = 'SNAPPY'\n)\nGO\n\nSELECT COUNT(1) FROM wwi_staging.Sale_Heap(nolock)\n\nCOPY INTO wwi_staging.Sale\nFROM 'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-small%2FYear%3D2019'\nWITH (\n    FILE_TYPE = 'PARQUET',\n    COMPRESSION = 'SNAPPY'\n)\nGO\n\nSELECT COUNT(1) FROM wwi_staging.Sale(nolock)\n\n-- truncating CCI table\nTRUNCATE TABLE wwi_staging.Sale;\nGO\n\n-- Loading it from Heap Table\nINSERT INTO [wwi_staging].[Sale]\nSELECT *\nFROM [wwi_staging].[Sale_Heap]\n\nCREATE TABLE [wwi_staging].DailySalesCounts2\n    (\n        [Date] [nvarchar](24) ,\n        [NorthAmerica] [int]  ,\n        [SouthAmerica] [int]  ,\n        [Europe] [int]  ,\n        [Africa] [int]  ,\n        [Asia] [int]  \n    )\nGO\n\nDROP TABLE [wwi_staging].DailySalesCounts2; \n\nTRUNCATE TABLE wwi_staging.DailySalesCounts;\n\nCOPY INTO wwi_staging.DailySalesCounts\nFROM 'https://asadatalakeimre.dfs.core.windows.net/wwi-02/campaign-analytics/dailycounts4.txt'\nWITH (\n    FILE_TYPE = 'CSV',\n    FIELDTERMINATOR='.',\n    ROWTERMINATOR=','\n)\nGO\n\nSELECT COUNT(*) FROM wwi_staging.DailySalesCounts; \n\nTRUNCATE TABLE wwi_staging.DailySalesCounts2;\n\n-- Replace <PrimaryStorage> with the workspace default storage account name.\nCOPY INTO wwi_staging.DailySalesCounts2\nFROM 'https://asadatalakeimre.dfs.core.windows.net/wwi-02/campaign-analytics/dailycounts3.txt'\nWITH (\n    FILE_TYPE = 'CSV',\n    FIELDTERMINATOR=';',\n    ROWTERMINATOR='0X0A',\n    ENCODING = 'UTF8',\n    FIELDQUOTE='\"'\n)\nGO\n\nSELECT * FROM [wwi_staging].DailySalesCounts2\nORDER BY [Date] DESC\n\nSELECT count(*) FROM [wwi_staging].DailySalesCounts\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"name": "SQLPool01",
				"type": "SqlPool"
			}
		},
		"type": "SqlQuery"
	}
}