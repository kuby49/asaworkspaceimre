{
	"name": "Challenge - Intro",
	"properties": {
		"content": {
			"query": "-- tables in wwi_poc schema\nSELECT count(*) from [wwi_poc].[Sale]\n\n\n-- 4 tables in the schema \nSELECT t1.name AS [Schema], t2.name AS [Table]\nFROM sys.schemas t1\nINNER JOIN sys.tables t2\nON t2.schema_id = t1.schema_id\nwhere t1.name = 'wwi_poc'\nORDER BY t1.name,t2.name\n\n-- explore sales data\nSELECT TOP 10 * from [wwi_poc].[Sale]\n\nSELECT min(TransactionDateId), max(TransactionDateId) from [wwi_poc].[Sale]\n\nCREATE TABLE  [wwi_poc].[Sale_bck]\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n)\nAS SELECT * FROM [wwi_poc].[Sale]\n\n-- create stored procedure for loading the CSV Sale data\nCREATE PROC bulk_load_Sale_csv\nAS\nBEGIN\nCOPY INTO wwi_poc.Sale\n(TransactionId 1, CustomerId 2, ProductId 3, Quantity 4, Price 5, TotalAmount 6, TransactionDateId 7, ProfitAmount 8, Hour 9, Minute 10, StoreId 11)\nFROM 'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-poc/*.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,ERRORFILE = 'https://asadatalakeimre.dfs.core.windows.net/wwi-02/'\n\t,IDENTITY_INSERT = 'OFF'\n)\nEND\n\n-- create stored procedure for parquet files bulkload\nCREATE PROC bulk_load_Sale_parquet\nAS\nBEGIN\nCOPY INTO wwi_poc.Sale_test2\n(TransactionId 1, CustomerId 2, ProductId 3, Quantity 4, Price 5, TotalAmount 6, TransactionDateId 7, ProfitAmount 8, Hour 9, Minute 10, StoreId 11)\nFROM \t'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-small/Year=2017/Quarter=Q2/Month=6/*/*.parquet', \n\t\t'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-small/Year=2017/Quarter=Q3/*/*.parquet', \n\t\t'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-small/Year=2017/Quarter=Q4/*/*.parquet', \n\t\t'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-small/Year=2018/*/*.parquet',\n\t\t'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-small/Year=2018/*/*.parquet'\nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,COMPRESSION = 'snappy'\n\t,IDENTITY_INSERT = 'OFF'\n)\nEND\n\n\n-- create a small sale table for testing teh stored procedures\nCREATE TABLE [wwi_poc].[Sale_test]\n( \n\t[TransactionId] [uniqueidentifier]  NOT NULL,\n\t[CustomerId] [int]  NOT NULL,\n\t[ProductId] [smallint]  NOT NULL,\n\t[Quantity] [tinyint]  NOT NULL,\n\t[Price] [decimal](9,2)  NOT NULL,\n\t[TotalAmount] [decimal](9,2)  NOT NULL,\n\t[TransactionDateId] [int]  NOT NULL,\n\t[ProfitAmount] [decimal](9,2)  NOT NULL,\n\t[Hour] [tinyint]  NOT NULL,\n\t[Minute] [tinyint]  NOT NULL,\n\t[StoreId] [smallint]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n)\nGO\n\nDROP TABLE  [wwi_poc].[Sale_test2]\n-- create a small sale table for testing the stored procedures\nCREATE TABLE [wwi_poc].[Sale_test2]\n( \n\t[TransactionId] [uniqueidentifier]  NOT NULL,\n\t[CustomerId] [int]  NOT NULL,\n\t[ProductId] [smallint]  NOT NULL,\n\t[Quantity] [tinyint]  NOT NULL,\n\t[Price] [decimal](9,2)  NOT NULL,\n\t[TotalAmount] [decimal](9,2)  NOT NULL,\n\t[TransactionDateId] [int]  NOT NULL,\n\t[ProfitAmount] [decimal](9,2)  NOT NULL,\n\t[Hour] [tinyint]  NOT NULL,\n\t[Minute] [tinyint]  NOT NULL,\n\t[StoreId] [smallint]  NOT NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n)\nGO\n\n-- testing CSV stored procedure\nCOPY INTO wwi_poc.Sale_test\n(TransactionId 1, CustomerId 2, ProductId 3, Quantity 4, Price 5, TotalAmount 6, TransactionDateId 7, ProfitAmount 8, Hour 9, Minute 10, StoreId 11)\nFROM 'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-poc/sale-20170501.csv'\nWITH\n(\n\tFILE_TYPE = 'CSV'\n\t,MAXERRORS = 0\n\t,ERRORFILE = 'https://asadatalakeimre.dfs.core.windows.net/wwi-02/'\n    ,FIRSTROW = 2\n    ,ROWTERMINATOR='\\n'\n--\t,IDENTITY_INSERT = 'OFF'\n)\n\n-- testing Parquet stored procedure\nCOPY INTO wwi_poc.Sale_test2\n(TransactionId 1, CustomerId 2, ProductId 3, Quantity 4, Price 5, TotalAmount 6, TransactionDateId 7, ProfitAmount 8, Hour 9, Minute 10, StoreId 11)\nFROM \t'https://asadatalakeimre.dfs.core.windows.net/wwi-02/sale-small/Year=2017/Quarter=Q2/Month=6/*/*.parquet' \nWITH\n(\n\tFILE_TYPE = 'PARQUET'\n\t,MAXERRORS = 0\n\t,COMPRESSION = 'snappy'\n\t,IDENTITY_INSERT = 'OFF'\n)\n\nTRUNCATE TABLE wwi_poc.Sale_test2\n\nSELECT count(*) FROM  wwi_poc.Sale_test(nolock)\n\nSELECT count(*) FROM  wwi_poc.Sale_test2(nolock)\n\nSELECT count(*) FROM  wwi_poc.Sale(nolock)\n\n--- at this point CSV data is loaded into table sales_test\n-- and parquet date is loaded into tavke sales_test2\nTRUNCATE TABLE wwi_poc.Sale\nGO\n-- lets consolidate all data in sale_heap\n-- start with CSV\nINSERT INTO [wwi_poc].[sale] \nSELECt * from [wwi_poc].[sale_test]\nGO\n-- And continue with parquet\nINSERT INTO [wwi_poc].[sale] \nSELECt * from [wwi_poc].[sale_test2]\nGO\n\n-- Finish with originally already loaded data \nINSERT INTO [wwi_poc].[sale] \nSELECt * from [wwi_poc].[sale_bck]\nGO\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"name": "SQLPool01",
				"type": "SqlCompute"
			}
		},
		"type": "SqlQuery"
	}
}